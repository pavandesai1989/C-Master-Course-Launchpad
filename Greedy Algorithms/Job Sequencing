#include<iostream>
#include<vector>
using namespace std;
struct job
{
    char id;     // Job Id
    int dead;    // Deadline of job
    int profit;  // Profit if job is over
};

bool comparejob(job a, job b)
{
    //decreasing order of profit
    return a.profit > b.profit;
}

void printJobScheduling( job arr[], int n)
{
    //sort the array based on the profit
    sort(arr,arr+n,comparejob);
    
    int result[n]; //array to add jobs
    int slot[n]; //check slot available
    
    for(int i=0;i<n;i++)
        slot[i] = false;
    
    for(int i=0;i<n;i++)
    {
        for(int j = min(n,arr[i].dead)-1;j>=0;j--)
        {
            //check if slot is available
            if(slot[j] == false)
            {
                result[j] = i;
                slot[j] = true;
                break;
            }
        }
    }
    
    //print ids
    for(int i=0;i<n;i++)
    {
        if(slot[i])
        {
            cout<<arr[result[i]].id<<endl;
        }
    }
    
}



int main()
{
    job arr[] = { {'a', 2, 100}, {'b', 1, 19}, {'c', 2, 27},
                   {'d', 1, 25}, {'e', 3, 15}};
    int n = sizeof(arr)/sizeof(arr[0]);
    cout << "Following is maximum profit sequence of jobs \n";
    
    // Function call
    printJobScheduling(arr, n);
    return 0;

    
    
}
