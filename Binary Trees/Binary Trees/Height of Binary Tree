
#include<iostream>
#include<vector>
#include<queue>
using namespace std;

class node
{
public:
    int data;
    node* left;
    node* right;
    
public:
    node(int d):data(d),left(nullptr),right(nullptr){
        
    }
};

node* inputlevelwiseBT()
{
    int rootdata;
    cout<<"enter the root data"<<endl;
    cin>>rootdata;
    node* root = new node(rootdata);
    
    queue<node*> q;
    q.push(root);
    
    while(!q.empty())
    {
        node* front = q.front();
        q.pop();
        
        int leftdata;
        cout<<"enter the left child of "<<front->data<<endl;
        cin>>leftdata;
        if(leftdata!=-1)
        {
           node* leftchild = new node(leftdata);
           front->left = leftchild;
           q.push(leftchild);
        }
        
        int rightdata;
        cout<<"enter the right child of "<<front->data<<endl;
        cin>>rightdata;
        if(rightdata!=-1)
        {
            node* rightchild = new node(rightdata);
            front->right = rightchild;
            q.push(rightchild);
        }
    }
    
    return root;
}


void printlevelwiselinebyline(node* root)
{
    queue<node*> q;
    q.push(root);
    q.push(NULL);
    
    while(!q.empty())
    {
        node* front = q.front();
        if(front == NULL)
        {
            cout<<endl;
            q.pop();
            //imp check
            if(!q.empty())
            {
                q.push(NULL);
            }
        }
        else
        {
            q.pop();
            
            cout<<front->data<<" ";
            if(front->left)
                q.push(front->left);
            if(front->right)
                q.push(front->right);
        }
    }

}

    int height(Node* root) 
    {
        int leftHeight=-1,rightHeight=-1;
        if(root->left)
            leftHeight=height(root->left);
        if(root->right)
            rightHeight=height(root->right);
            
        return max(leftHeight,rightHeight)+1;
    }

int HeightOfBT(node* root)
{
    if(root == NULL)
        return 0;
    
    int Ls = HeightOfBT(root->left);
    int Rs = HeightOfBT(root->right);
    
    return max(Ls,Rs) + 1;
}


int main()
{
    node* root = inputlevelwiseBT();
    
    cout<<"height of BT is "<<HeightOfBT(root)<<endl;
    
    
}
