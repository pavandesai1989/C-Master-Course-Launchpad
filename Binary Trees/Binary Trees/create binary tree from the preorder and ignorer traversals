node* createtreefrominorderpreorder(int* in,int*pre,int s,int e)
{
    //base case
    if(s>e)
        return NULL;
    static int i =0;
    node* root = new node(pre[i]);
    
    //search this node in the inorder to find left and right sub tree
    int idx = -1;
    for(int j=s;j<=e;j++)
    {
        if(pre[i] == in[j])
        {
            idx = j;
            break;
        }
    }
    i++;
    root->left = createtreefrominorderpreorder(in,pre,s,idx-1);
    root->right = createtreefrominorderpreorder(in,pre,idx+1,e);
    
    return root;
}

int main()
{
    int in[] = {3,2,8,4,1,6,7,5};
    int pre[] = {1,2,3,4,8,5,6,7};
    
    int n = sizeof(in)/sizeof(int);
    
    node* root = createtreefrominorderpreorder(in,pre,0,n-1);
    
    
}
